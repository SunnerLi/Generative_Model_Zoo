project_name: MNIST

defaults:
  - _self_
  - model: g
  - loss: diffusion
  - optimizer: diffusion

paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  output_dir: ${paths.root_dir}/output/${project_name}
  log_dir: ${paths.root_dir}/logs/

data:
  dataset_path: ylecun/mnist
  preprocess:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.Resize
        size: [32, 32]
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.Normalize
        mean: [0.1307]
        std: [0.3081]
  batch_size: 32
  
trainer:
  lr_scheduler_cls: torch.optim.lr_scheduler.CosineAnnealingLR
  epochs: 40
  epochs_save_weight: 40
  seed: 0
  gradient_accumulation_steps: 2

hydra:
  run:
    dir: ${paths.output_dir}/${now:%Y-%m-%d}_${now:%H-%M-%S}

noise_scheduler:
  _target_: diffusers.DDPMScheduler
  num_train_timesteps: 1000